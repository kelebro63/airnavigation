package com.example.airnavigate.Dao;

import java.util.List;
import com.example.airnavigate.Dao.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table "DEPUTY".
 */
public class Deputy {

    private long id;
    private String name;
    private String family;
    private String patronymic;
    private String birthdate;
    private String credentialsStart;
    private String credentialsEnd;
    private String factionId;
    private String factionName;
    private String factionRole;
    private String partyNameInstr;
    private boolean isActual;
    private String homePage;
    private String factionRegion;
    private String nameGenitive;
    private String familyAndInitials;
    private String voteLink;
    private String transcriptLink;
    private Integer lawcount;
    private Integer speachCount;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient DeputyDao myDao;

    private List<Education> educations;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Deputy() {
    }

    public Deputy(long id) {
        this.id = id;
    }

    public Deputy(long id, String name, String family, String patronymic, String birthdate, String credentialsStart, String credentialsEnd, String factionId, String factionName, String factionRole, String partyNameInstr, boolean isActual, String homePage, String factionRegion, String nameGenitive, String familyAndInitials, String voteLink, String transcriptLink, Integer lawcount, Integer speachCount) {
        this.id = id;
        this.name = name;
        this.family = family;
        this.patronymic = patronymic;
        this.birthdate = birthdate;
        this.credentialsStart = credentialsStart;
        this.credentialsEnd = credentialsEnd;
        this.factionId = factionId;
        this.factionName = factionName;
        this.factionRole = factionRole;
        this.partyNameInstr = partyNameInstr;
        this.isActual = isActual;
        this.homePage = homePage;
        this.factionRegion = factionRegion;
        this.nameGenitive = nameGenitive;
        this.familyAndInitials = familyAndInitials;
        this.voteLink = voteLink;
        this.transcriptLink = transcriptLink;
        this.lawcount = lawcount;
        this.speachCount = speachCount;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getDeputyDao() : null;
    }

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getFamily() {
        return family;
    }

    public void setFamily(String family) {
        this.family = family;
    }

    public String getPatronymic() {
        return patronymic;
    }

    public void setPatronymic(String patronymic) {
        this.patronymic = patronymic;
    }

    public String getBirthdate() {
        return birthdate;
    }

    public void setBirthdate(String birthdate) {
        this.birthdate = birthdate;
    }

    public String getCredentialsStart() {
        return credentialsStart;
    }

    public void setCredentialsStart(String credentialsStart) {
        this.credentialsStart = credentialsStart;
    }

    public String getCredentialsEnd() {
        return credentialsEnd;
    }

    public void setCredentialsEnd(String credentialsEnd) {
        this.credentialsEnd = credentialsEnd;
    }

    public String getFactionId() {
        return factionId;
    }

    public void setFactionId(String factionId) {
        this.factionId = factionId;
    }

    public String getFactionName() {
        return factionName;
    }

    public void setFactionName(String factionName) {
        this.factionName = factionName;
    }

    public String getFactionRole() {
        return factionRole;
    }

    public void setFactionRole(String factionRole) {
        this.factionRole = factionRole;
    }

    public String getPartyNameInstr() {
        return partyNameInstr;
    }

    public void setPartyNameInstr(String partyNameInstr) {
        this.partyNameInstr = partyNameInstr;
    }

    public boolean getIsActual() {
        return isActual;
    }

    public void setIsActual(boolean isActual) {
        this.isActual = isActual;
    }

    public String getHomePage() {
        return homePage;
    }

    public void setHomePage(String homePage) {
        this.homePage = homePage;
    }

    public String getFactionRegion() {
        return factionRegion;
    }

    public void setFactionRegion(String factionRegion) {
        this.factionRegion = factionRegion;
    }

    public String getNameGenitive() {
        return nameGenitive;
    }

    public void setNameGenitive(String nameGenitive) {
        this.nameGenitive = nameGenitive;
    }

    public String getFamilyAndInitials() {
        return familyAndInitials;
    }

    public void setFamilyAndInitials(String familyAndInitials) {
        this.familyAndInitials = familyAndInitials;
    }

    public String getVoteLink() {
        return voteLink;
    }

    public void setVoteLink(String voteLink) {
        this.voteLink = voteLink;
    }

    public String getTranscriptLink() {
        return transcriptLink;
    }

    public void setTranscriptLink(String transcriptLink) {
        this.transcriptLink = transcriptLink;
    }

    public Integer getLawcount() {
        return lawcount;
    }

    public void setLawcount(Integer lawcount) {
        this.lawcount = lawcount;
    }

    public Integer getSpeachCount() {
        return speachCount;
    }

    public void setSpeachCount(Integer speachCount) {
        this.speachCount = speachCount;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<Education> getEducations() {
        if (educations == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            EducationDao targetDao = daoSession.getEducationDao();
            List<Education> educationsNew = targetDao._queryDeputy_Educations(id);
            synchronized (this) {
                if(educations == null) {
                    educations = educationsNew;
                }
            }
        }
        return educations;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetEducations() {
        educations = null;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
